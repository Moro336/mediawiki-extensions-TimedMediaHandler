{
	"name": "TimedMediaHandler",
	"namemsg": "timedmediahandler-extensionname",
	"version": "0.5.0",
	"author": [
		"Michael Dale",
		"Tim Starling",
		"James Heinrich",
		"Jan Gerber",
		"Brion Vibber",
		"Derk-Jan Hartman"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:TimedMediaHandler",
	"descriptionmsg": "timedmediahandler-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "media",
	"requires": {
		"MediaWiki": ">= 1.29.0"
	},
	"APIModules": {
		"transcodereset": "ApiTranscodeReset"
	},
	"APIPropModules": {
		"videoinfo": "ApiQueryVideoInfo",
		"transcodestatus": "ApiTranscodeStatus"
	},
	"AvailableRights": [
		"transcode-reset",
		"transcode-status"
	],
	"ExtensionFunctions": [
		"TimedMediaHandlerHooks::register"
	],
	"FileExtensions": [
		"ogg",
		"ogv",
		"oga",
		"flac",
		"opus",
		"wav",
		"webm",
		"mp4",
		"mp3"
	],
	"GroupPermissions": {
		"sysop": {
			"transcode-reset": true,
			"transcode-status": true
		},
		"autoconfirmed": {
			"transcode-reset": true
		}
	},
	"LogActionsHandlers": {
		"timedmediahandler/resettranscode": "LogFormatter"
	},
	"LogTypes": [
		"timedmediahandler"
	],
	"SpecialPages": {
		"OrphanedTimedText": "SpecialOrphanedTimedText",
		"TimedMediaHandler": "SpecialTimedMediaHandler"
	},
	"MessagesDirs": {
		"TimedMediaHandler": [
			"i18n"
		],
		"MwEmbed.NewMwEmbedSupport": [
			"MwEmbedModules/NewMwEmbedSupport/i18n"
		],
		"MwEmbed.EmbedPlayer": [
			"MwEmbedModules/EmbedPlayer/i18n"
		],
		"MwEmbed.TimedText": [
			"MwEmbedModules/TimedText/i18n"
		],
		"NewMwEmbedSupport": [
			"MwEmbedModules/NewMwEmbedSupport/i18n/"
		]
	},
	"ExtensionMessagesFiles": {
		"TimedMediaHandlerMagic": "TimedMediaHandler.i18n.magic.php",
		"TimedMediaHandlerAliases": "TimedMediaHandler.i18n.alias.php"
	},
	"AutoloadClasses": {
		"NewMwEmbedResourceManager": "includes/NewMwEmbedResourceManager.php",
		"WebVideoTranscode": "WebVideoTranscode/WebVideoTranscode.php",
		"TimedMediaHandler": "TimedMediaHandler_body.php",
		"TimedMediaHandlerHooks": "TimedMediaHandlerHooks.php",
		"TimedMediaTransformOutput": "TimedMediaTransformOutput.php",
		"TimedMediaIframeOutput": "TimedMediaIframeOutput.php",
		"TimedMediaThumbnail": "TimedMediaThumbnail.php",
		"TranscodeStatusTable": "TranscodeStatusTable.php",

		"ApiTestCaseVideoUpload": "tests/phpunit/ApiTestCaseVideoUpload.php",
		"MockOggHandler": "tests/phpunit/mocks/MockOggHandler.php",

		"OggHandlerTMH": "handlers/OggHandler/OggHandler.php",
		"OggException": "handlers/OggHandler/OggException.php",
		"File_Ogg": "handlers/OggHandler/File_Ogg/File/Ogg.php",
		"File_Ogg_Bitstream": "handlers/OggHandler/File_Ogg/File/Ogg/Bitstream.php",
		"File_Ogg_Flac": "handlers/OggHandler/File_Ogg/File/Ogg/Flac.php",
		"File_Ogg_Media": "handlers/OggHandler/File_Ogg/File/Ogg/Media.php",
		"File_Ogg_Opus": "handlers/OggHandler/File_Ogg/File/Ogg/Opus.php",
		"File_Ogg_Speex": "handlers/OggHandler/File_Ogg/File/Ogg/Speex.php",
		"File_Ogg_Theora": "handlers/OggHandler/File_Ogg/File/Ogg/Theora.php",
		"File_Ogg_Vorbis": "handlers/OggHandler/File_Ogg/File/Ogg/Vorbis.php",
		"ID3Handler": "handlers/ID3Handler/ID3Handler.php",
		"Mp4Handler": "handlers/Mp4Handler/Mp4Handler.php",
		"WebMHandler": "handlers/WebMHandler/WebMHandler.php",
		"FLACHandler": "handlers/FLACHandler/FLACHandler.php",
		"WAVHandler": "handlers/WAVHandler/WAVHandler.php",
		"Mp3Handler": "handlers/Mp3Handler/Mp3Handler.php",
		"TextHandler": "handlers/TextHandler/TextHandler.php",
		"TimedTextPage": "TimedTextPage.php",
		"WebVideoTranscodeJob": "WebVideoTranscode/WebVideoTranscodeJob.php",
		"ApiQueryVideoInfo": "ApiQueryVideoInfo.php",
		"ApiTranscodeStatus": "ApiTranscodeStatus.php",
		"ApiTranscodeReset": "ApiTranscodeReset.php",
		"SpecialTimedMediaHandler": "SpecialTimedMediaHandler.php",
		"SpecialOrphanedTimedText": "SpecialOrphanedTimedText.php"
	},
	"Hooks": {
		"GetBetaFeaturePreferences": "TimedMediaHandlerHooks::onGetBetaFeaturePreferences",
		"PageRenderingHash": "TimedMediaHandlerHooks::changePageRenderingHash",
		"CanonicalNamespaces": "TimedMediaHandlerHooks::addCanonicalNamespaces",
		"ResourceLoaderRegisterModules": "NewMwEmbedResourceManager::registerModules",
		"ResourceLoaderGetConfigVars": "NewMwEmbedResourceManager::registerConfigVars"
	},
	"config": {
		"TmhUseBetaFeatures": {
			"description": "Controls weather to enable videojs beta feature. Requires the BetaFeature extension be installed.",
			"public": true,
			"value": true
		},
		"TmhWebPlayer": {
			"description": "Configure the webplayer. Allowed values: mwembed, videojs",
			"public": true,
			"value": "mwembed"
		},
		"MwEmbedModuleConfig": {
			"description": "MwEmbed module configuration.\n\nEmbedPlayer.DirectFileLinkWarning: Show a warning to the user if they are not using an html5 browser with high quality ogg support\nEmbedPlayer.EnableOptionsMenu: Show the options menu\nTimedText.ShowInterface: The text interface should always be shown (even if there are no text tracks for that asset at render time)\nTimedText.ShowAddTextLink: Show the add text link",
			"public": true,
			"value": {
				"EmbedPlayer.DirectFileLinkWarning": true,
				"EmbedPlayer.EnableOptionsMenu": true,
				"EmbedPlayer.DisableHTML5FlashFallback": true,
				"TimedText.ShowInterface": "always",
				"TimedText.ShowAddTextLink": true
			}
		},
		"WaitTimeForTranscodeReset": {
			"description": "How long you have to wait between transcode resets for non-error transcodes",
			"public": true,
			"value": 3600
		},
		"MinimumVideoPlayerSize": {
			"description": "The minimum size for an embed video player (smaller than this size uses a pop-up player)",
			"public": true,
			"value": 200
		},
		"MediaVideoTypes": {
			"description": "Set the supported ogg codecs for video",
			"public": true,
			"value": [
				"Theora",
				"VP8"
			]
		},
		"MediaAudioTypes": {
			"description": "Set the supported ogg codecs for audio",
			"public": true,
			"value": [
				"Vorbis",
				"Speex",
				"FLAC",
				"Opus"
			]
		},
		"VideoPlayerSkinModule": {
			"description": "Default skin for mwEmbed player",
			"public": true,
			"value": "mw.PlayerSkinKskin"
		},
		"EnableIframeEmbed": {
			"description": "Support iframe for remote embedding",
			"public": true,
			"value": true
		},
		"EnableTranscode": {
			"description": "If transcoding is enabled for this wiki (if disabled, no transcode jobs are added and no transcode status is displayed). Note if remote embedding an asset we will still check if the remote repo has transcoding enabled and associated flavors for that media embed.",
			"public": true,
			"value": true
		},
		"EnableNiceBackgroundTranscodeJobs": {
			"description": "If the job runner should run transcode commands in a background thread and monitor the transcoding progress. This enables more fine grain control of the transcoding process, wraps encoding commands in a lower priority 'nice' call, and kills long running transcodes that are not making any progress. If set to false, the job runner will use the more compatible php blocking shell exec command.",
			"public": true,
			"value": false
		},
		"TranscodeBackgroundPriority": {
			"description": "The priority to be used with the nice transcode commands.",
			"public": true,
			"value": 19
		},
		"TranscodeBackgroundTimeLimit": {
			"description": "The total amout of time a transcoding shell command can take",
			"public": true,
			"value": 28800
		},
		"TranscodeBackgroundMemoryLimit": {
			"description": "Maximum amount of virtual memory available to transcoding processes in KiB. 2GiB. ffmpeg/avconv mmap resources, so virtual memory needs to be high enough",
			"public": true,
			"value": 2097152
		},
		"TranscodeBackgroundSizeLimit": {
			"description": "Maximum file size transcoding processes can create, in KiB. 3GiB.",
			"public": true,
			"value": 3145728
		},
		"FFmpegThreads": {
			"description": "Number of threads to use in avconv for transcoding",
			"public": true,
			"value": 1
		},
		"FFmpegVP9RowMT": {
			"description": "Whether to enable macroblock row multithreading for VP9 (-row-mt 1)\n\nThis allows increasing $wgFFmpegThreads to a larger number for VP9  transcodes; without it encoding will be limited to 4 threads for HD, or less for low resolution.\n\nThis requires libvpx 1.7 and a matching build of ffmpeg 3.3 or higher or it will fail with an unrecognized option error.",
			"public": true,
			"value": false
		},
		"OggThumbLocation": {
			"description": "Location of oggThumb binary (used instead of ffmpeg)",
			"public": false,
			"value": "/usr/bin/oggThumb"
		},
		"FFmpegLocation": {
			"description": "Location of the avconv/ffmpeg binary (used to encode WebM and for thumbnails)",
			"public": false,
			"value": "/usr/bin/avconv"
		},
		"TimedTextNS": {
			"description": "The NS for TimedText (registered on MediaWiki.org) https://www.mediawiki.org/wiki/Extension_namespace_registration Note that Wikimedia Commons pre-dates TimedMediaHandler, and sets this to 102.",
			"public": true,
			"value": 710
		},
		"TimedTextForeignNamespaces": {
			"description": "Set TimedText namespace for ForeignDBViaLBRepo on a per wikiID basis like `$wgTimedTextForeignNamespaces = [ 'commonswiki' => 102 ];`.",
			"public": true,
			"value": []
		},
		"EnableLocalTimedText": {
			"description": "Set to false to disable local TimedText. You still get subtitles for videos from foreign repos; to disable all TimedText, set `$wgMwEmbedModuleConfig['TimedText.ShowInterface'] = 'off';`",
			"public": true,
			"value": true
		},
		"EnabledTranscodeSet": {
			"description": "Default enabled video transcodes\n\n- If set to empty array, no derivatives will be created\n- These transcodes are *in addition to* the source file.\n- Only derivatives with smaller width than the source asset size will be created\n- Regardless of source size at least one WebM and Ogg source will be created from the $wgEnabledTranscodeSet\n- Derivative jobs are added to the MediaWiki JobQueue the first time the asset is displayed\n- Derivative should be listed min to max\n\nAllowed values:\n* Values for WebM VP8/Vorbis, our primary free/open video format supported by Chrome/Firefox/Opera natively, and plays back in Safari/IE/Edge via ogv.js:\n** 160p.webm – Very low-bitrate web streamable WebM video\n** 240p.webm – Low-bitrate web streamable WebM video\n** 360p.webm – Medium-bitrate web streamable WebM video\n** 480p.webm – Moderate-bitrate web streamable WebM video\n** 720p.webm – A high quality WebM stream\n** 1080p.webm – A full-HD high quality WebM stream\n** 1440p.webm – A 2K full high quality WebM stream\n** 2160p.webm – A 4K full high quality WebM stream\n* Values for WebM VP9, our future free/open video format:\n** 160p.vp9.webm – Very low\n** 240p.vp9.webm – Low\n** 360p.vp9.webm – A least common denominator h.264 stream; first gen iPhone, iPods, early Android etc.\n** 480p.vp9.webm – A mid range h.264 stream; mid range phones and low end tablets\n** 720p.vp9.webm – An high quality HD stream; higher end phones, tablets, smart tvs\n** 1080p.vp9.webm – A full-HD high quality stream; higher end phones, tablets, smart tvs\n** 1440p.vp9.webm – A 2K high quality stream; higher end phones, tablets, smart tvs\n** 2160p.vp9.webm – A 4K high quality stream; higher end phones, tablets, smart tvs\n* Values for MP4 H.264/AAC, the primary format for the Apple/Microsoft world. Check patent licensing issues in your country before use! Similar to WebM in quality/bitrate:\n** 160p.mp4 – Very low\n** 240p.mp4 – Low\n** 320p.mp4 – Pretty low\n** 360p.mp4 – A least common denominator h.264 stream; first gen iPhone, iPods, early Android etc.\n** 480p.mp4 – A mid range h.264 stream; mid range phones and low end tablets\n** 720p.mp4 – An high quality HD stream; higher end phones, tablets, smart tvs\n** 1080p.mp4 – A full-HD high quality stream; higher end phones, tablets, smart tvs\n** 1440p.mp4 – A 2K high quality stream; higher end phones, tablets, smart tvs\n** 2160p.mp4 – A 4K high quality stream; higher end phones, tablets, smart tvs\n* Note: Ogg video profiles have been removed as of January 2018. Use WebM output for royalty-free codec output.",
			"public": true,
			"value": {
				"160p.webm": true,
				"240p.webm": true,
				"360p.webm": true,
				"480p.webm": true,
				"720p.webm": true,
				"1080p.webm": true,
				"1440p.webm": false,
				"2160p.webm": false,
				"120p.vp9.webm": false,
				"180p.vp9.webm": false,
				"240p.vp9.webm": false,
				"360p.vp9.webm": false,
				"480p.vp9.webm": false,
				"720p.vp9.webm": false,
				"1080p.vp9.webm": false,
				"1440p.vp9.webm": false,
				"2160p.vp9.webm": false,
				"160p.mp4": false,
				"240p.mp4": false,
				"320p.mp4": false,
				"360p.mp4": false,
				"480p.mp4": false,
				"720p.mp4": false,
				"1080p.mp4": false,
				"1440p.mp4": false,
				"2160p.mp4": false
			}
		},
		"EnabledAudioTranscodeSet": {
			"description": "Default enabled audio transcodes\n\n If set to empty array, no derivatives will be created\n- These transcodes are *in addition to* the source file.\n- Derivative should be listed min to max\n\nllowed values:\n* ogg – Ogg Vorbis\n* opus – Note that Opus support must be available in avconv\n* mp3 – Note that avconv needs libmp3lame support\n* m4a – Note that avconv needs libvo_aacenc support",
			"public": true,
			"value": {
				"ogg": true,
				"opus": false,
				"mp3": true,
				"m4a": false
			}
		},
		"TmhEnableMp4Uploads": {
			"description": "If MP4 source assets can be ingested",
			"public": true,
			"value": false
		},
		"TmhFileExtensions": {
			"description": "List of extensions handled by Timed Media Handler since its referenced in a few places. You should not modify this variable.",
			"public": true,
			"value": [
				"ogg",
				"ogv",
				"oga",
				"flac",
				"opus",
				"wav",
				"webm",
				"mp4",
				"mp3"
			]
		},
		"TmhPriorityResolutionThreshold": {
			"description": "Transcode resolutions higher than this will run in the low-priority queue. This'll give us SD transcodes as fast as possible, then do HD later.",
			"public": true,
			"value": 480
		},
		"TmhPriorityLengthThreshold": {
			"description": "Transcodes of files longer than this (seconds) will run in the low-priority queue; defaults to 15 minutes. This'll mean long videos won't flood the high-priority queue.",
			"public": true,
			"value": 900
		},
		"ParserTestMediaHandlers": {
			"description": "MockOggHandler::class",
			"public": true,
			"value": {
				"application/ogg": "MockOggHandler"
			}
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "",
		"remoteExtPath": "TimedMediaHandler"
	},
	"ResourceModules": {
		"mw.PopUpMediaTransform": {
				"scripts": "resources/mw.PopUpThumbVideo.js",
				"dependencies": [
						"mw.MwEmbedSupport",
						"mediawiki.Title",
						"mw.PopUpMediaTransform.styles"
				]
		},
		"mw.PopUpMediaTransform.styles": {
				"styles": "resources/PopUpThumbVideo.css"
		},
		"mw.TMHGalleryHook.js": {
				"scripts": "resources/mw.TMHGalleryHook.js"
		},
		"ext.tmh.embedPlayerIframe": {
				"scripts": "resources/ext.tmh.embedPlayerIframe.js",
				"dependencies": [
						"jquery.embedPlayer",
						"mw.MwEmbedSupport"
				]
		},
		"mw.MediaWikiPlayerSupport": {
				"scripts": "resources/mw.MediaWikiPlayerSupport.js",
				"dependencies": [
						"mw.Api",
						"mw.MwEmbedSupport"
				]
		},
		"mw.MediaWikiPlayer.loader": {
				"scripts": "resources/mw.MediaWikiPlayer.loader.js",
				"dependencies": [
						"mw.EmbedPlayer.loader",
						"mw.TimedText.loader"
				]
		},
		"ext.tmh.video-js": {
				"scripts": "resources/videojs/video.js",
				"styles": "resources/videojs/video-js.css",
				"noflip": true,
				"targets": [
						"mobile",
						"desktop"
				],
				"languageScripts": {
						"ar": "resources/videojs/lang/ar.js",
						"ba": "resources/videojs/lang/ba.js",
						"bg": "resources/videojs/lang/bg.js",
						"ca": "resources/videojs/lang/ca.js",
						"cs": "resources/videojs/lang/cs.js",
						"da": "resources/videojs/lang/da.js",
						"de": "resources/videojs/lang/de.js",
						"el": "resources/videojs/lang/el.js",
						"en": "resources/videojs/lang/en.js",
						"es": "resources/videojs/lang/es.js",
						"fa": "resources/videojs/lang/fa.js",
						"fi": "resources/videojs/lang/fi.js",
						"fr": "resources/videojs/lang/fr.js",
						"gl": "resources/videojs/lang/gl.js",
						"he": "resources/videojs/lang/he.js",
						"hr": "resources/videojs/lang/hr.js",
						"hu": "resources/videojs/lang/hu.js",
						"it": "resources/videojs/lang/it.js",
						"ja": "resources/videojs/lang/ja.js",
						"ko": "resources/videojs/lang/ko.js",
						"nb": "resources/videojs/lang/nb.js",
						"nl": "resources/videojs/lang/nl.js",
						"nn": "resources/videojs/lang/nn.js",
						"pl": "resources/videojs/lang/pl.js",
						"pt": "resources/videojs/lang/pt-PT.js",
						"pt-br": "resources/videojs/lang/pt-BR.js",
						"ru": "resources/videojs/lang/ru.js",
						"sk": "resources/videojs/lang/sk.js",
						"sr": "resources/videojs/lang/sr.js",
						"sv": "resources/videojs/lang/sv.js",
						"tr": "resources/videojs/lang/tr.js",
						"uk": "resources/videojs/lang/uk.js",
						"vi": "resources/videojs/lang/vi.js",
						"zh-cn": "resources/videojs/lang/zh-CN.js",
						"zh-tw": "resources/videojs/lang/zh-TW.js"
				}
		},
		"ext.tmh.videojs-ogvjs": {
				"scripts": "resources/videojs-ogvjs/videojs-ogvjs.js",
				"targets": [
						"mobile",
						"desktop"
				],
				"dependencies": [
						"ext.tmh.video-js",
						"ext.tmh.OgvJs"
				]
		},
		"ext.tmh.videojs-resolution-switcher": {
				"scripts": "resources/videojs-resolution-switcher/videojs-resolution-switcher.js",
				"styles": "resources/videojs-resolution-switcher/videojs-resolution-switcher.css",
				"targets": [
						"mobile",
						"desktop"
				],
				"dependencies": [
						"ext.tmh.video-js"
				]
		},
		"ext.tmh.videojs-responsive-layout": {
				"scripts": "resources/videojs-responsive-layout/videojs-responsive-layout.js",
				"targets": [
						"mobile",
						"desktop"
				],
				"dependencies": [
						"ext.tmh.video-js"
				]
		},
		"ext.tmh.mw-info-button": {
				"scripts": "resources/mw-info-button/mw-info-button.js",
				"styles": "resources/mw-info-button/mw-info-button.css",
				"targets": [
						"mobile",
						"desktop"
				],
				"dependencies": [
						"ext.tmh.video-js"
				]
		},
		"ext.tmh.player": {
				"scripts": "resources/ext.tmh.player.js",
				"targets": [
						"mobile",
						"desktop"
				],
				"dependencies": [
						"ext.tmh.video-js",
						"ext.tmh.videojs-resolution-switcher",
						"ext.tmh.videojs-responsive-layout",
						"ext.tmh.mw-info-button",
						"ext.tmh.OgvJsSupport"
				],
				"messages": [
						"timedmedia-resolution-160",
						"timedmedia-resolution-240",
						"timedmedia-resolution-360",
						"timedmedia-resolution-480",
						"timedmedia-resolution-720",
						"timedmedia-resolution-1080",
						"timedmedia-resolution-1440",
						"timedmedia-resolution-2160"
				]
		},
		"ext.tmh.player.styles": {
				"styles": "resources/ext.tmh.player.styles.less",
				"targets": [
						"mobile",
						"desktop"
				]
		},
		"ext.tmh.thumbnail.styles": {
				"styles": "resources/ext.tmh.thumbnail.css",
				"position": "top"
		},
		"ext.tmh.transcodetable": {
				"scripts": "resources/ext.tmh.transcodetable.js",
				"styles": "resources/transcodeTable.css",
				"dependencies": [
						"mediawiki.api.edit",
						"oojs-ui"
				],
				"messages": [
						"timedmedia-reset-button-cancel",
						"timedmedia-reset-button-dismiss",
						"timedmedia-reset-button-reset",
						"timedmedia-reset-error",
						"timedmedia-reset",
						"timedmedia-reset-areyousure",
						"timedmedia-reset-explanation"
				]
		},
		"ext.tmh.TimedTextSelector": {
				"scripts": "resources/ext.tmh.TimedTextSelector.js"
		},
		"ext.tmh.OgvJsSupport": {
				"scripts": [
						"MwEmbedModules/EmbedPlayer/binPlayers/ogv.js/ogv-support.js",
						"resources/ext.tmh.OgvJsSupport.js"
				],
				"targets": [
						"mobile",
						"desktop"
				]
		},
		"ext.tmh.OgvJs": {
				"scripts": [
						"MwEmbedModules/EmbedPlayer/binPlayers/ogv.js/ogv.js"
				],
				"dependencies": "ext.tmh.OgvJsSupport",
				"targets": [
						"mobile",
						"desktop"
				]
		},
		"embedPlayerIframeStyle": {
				"styles": "resources/embedPlayerIframe.css",
				"targets": [
						"mobile",
						"desktop"
				]
		}
	},
	"load_composer_autoloader": true,
	"manifest_version": 2
}
